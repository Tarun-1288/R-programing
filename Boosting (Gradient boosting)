install.packages("caret") #this may take a while
library(caret)
## Loading required package: lattice
## Loading required package: ggplot2
# load housing data
Housing_data <- read.csv("housing.csv", header=T)
set.seed(99)
index <-createDataPartition(Housing_data$medv, p = .8,list = FALSE)
train <- Housing_data[index,]
test <- Housing_data[-index,]

#install.packages("xgboost")
library(xgboost)
set.seed(8)
model_gbm <- train(medv ~ .,
                          data = bc_train,
                          method = "xgbTree",
                          trControl =trainControl(method = "cv", 
             number = 5),
                   verbose=FALSE)
model_gbm

plot(model_gbm)
plot(varImp(model_gbm))

#Set up tuning parameter selection and CV for the training set
# define a grid of parameter options to try
xgb_grid <- expand.grid(
  nrounds = c(50,200),
  eta = c(0.025, 0.05, 0.1),
  max_depth = c(2, 3, 4, 5),
  gamma = 0,
  colsample_bytree = 1,
  min_child_weight = 1,
  subsample = 1)
# Train model with preprocessing & cv
model_rf_tune <- train(medv~.,data = bc_train,
                          method = "xgbTree",
                          trControl =fitControl,
                           # provide a grid of parameters
                          tuneGrid = xgb_grid,
                          verbose=FALSE)
plot(model_rf_tune)

bc_prob<- predict(model_gbm, bc_test)

#Model Performance
ASE<-mean((bc_prob-bc_test$medv)^2)
ASE


